!function(root,factory){"object"==typeof exports?module.exports=factory(root):"function"==typeof define&&define.amd?define([],factory(root)):root.LazyLoad=factory(root)}("undefined"!=typeof global?global:this.window||this.global,function(root){"use strict";const defaults={src:"data-src",srcset:"data-srcset",selector:".lazyload"},extend=function(){let extended={},deep=!1,i=0,length=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(deep=arguments[0],i++);let merge=function(obj){for(let prop in obj)Object.prototype.hasOwnProperty.call(obj,prop)&&(deep&&"[object Object]"===Object.prototype.toString.call(obj[prop])?extended[prop]=extend(!0,extended[prop],obj[prop]):extended[prop]=obj[prop])};for(;i<length;i++){let obj;merge(arguments[i])}return extended};function LazyLoad(images,options){this.settings=extend(defaults,options||{}),this.images=images||Array.prototype.slice.call(document.querySelectorAll(this.settings.selector)),this.observer=null,this.init()}if(LazyLoad.prototype={init:function(){if(!root.IntersectionObserver)return void this.loadImages();let self=this,observerConfig={root:null,rootMargin:"0px",threshold:[0]};this.observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){if(entry.intersectionRatio>0){self.observer.unobserve(entry.target);let src=entry.target.getAttribute(self.settings.src),srcset=entry.target.getAttribute(self.settings.srcset);"img"===entry.target.tagName.toLowerCase()?(src&&(entry.target.src=src),srcset&&(entry.target.srcset=srcset)):entry.target.style.backgroundImage="url("+src+")"}})},observerConfig),this.images.forEach(function(image){self.observer.observe(image)})},loadAndDestroy:function(){this.settings&&(this.loadImages(),this.destroy())},loadImages:function(){if(!this.settings)return;let self=this;this.images.forEach(function(image){let src=image.getAttribute(self.settings.src),srcset=image.getAttribute(self.settings.srcset);"img"===image.tagName.toLowerCase()?(src&&(image.src=src),srcset&&(image.srcset=srcset)):image.style.backgroundImage="url("+src+")"})},destroy:function(){this.settings&&(this.observer.disconnect(),this.settings=null)}},root.lazyload=function(images,options){return new LazyLoad(images,options)},root.jQuery){const $=root.jQuery;$.fn.lazyload=function(options){return(options=options||{}).attribute=options.attribute||"data-src",new LazyLoad($.makeArray(this),options),this}}return LazyLoad});